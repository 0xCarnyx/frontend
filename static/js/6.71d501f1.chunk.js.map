{"version":3,"sources":["src/components/InsufficientBalanceButton.tsx","src/components/AmountMeta.tsx","src/components/ApproveButton.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/components/TokenName.tsx","src/components/Notice.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/hooks/useSwapRouter.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/UnsupportedButton.tsx","src/components/PriceImpactTooHighButton.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["InsufficientBalanceButton","symbol","t","useTranslation","title","disabled","AmountMeta","props","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","amount","suffix","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","forEach","handle","clearTimeout","TokenName","caption","numberOfLines","ellipsizeMode","marginLeft","small","width","name","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","useDelayedEffect","timeout","key","toString","TokenSymbol","medium","TokenAmount","formatBalance","balance","decimals","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","signer","Router","getAddress","feeOnTransfer","recipient","ttl","params","swapCallParameters","router","getContract","ROUTER","estimateGas","methodName","args","value","gasLimit","functions","mul","div","logTransaction","map","arg","addLiquidity","fromToken","toToken","fromAmount","toAmount","deadline","Math","floor","Date","getTime","deduct","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","undefined","trim","ethers","utils","isAddress","findOrFetchToken","Input","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","selectable","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","includes","UnsupportedButton","state","fromSymbol","toSymbol","PriceImpactTooHighButton","useSwapState","useTokenPairState","chainId","updateTokens","getTrade","useSDK","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","swapping","setSwapping","isEmptyValue","block","p","ALCHEMY_PROVIDER","parseBalance","onSwap","result","setFromSymbol","Swap","ChangeNetwork","large","Border","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","AmountInput","TokenInput","onAmountChanged","setFromAmount","NoPairNotice","TradeInfo","isETHWETHPair","InfoBox","WrapInfo","SwapInfo","outputAmount","toFixed","price","executionPrice","impact","priceImpact","Meta","label","danger","Number","SwapControls","error","setError","approveRequired","isETH","fromTokenAllowed","gt","isWETH","FetchingButton","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","SwapScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/6.71d501f1.chunk.js","sourcesContent":["import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst PriceImpactTooHighButton = () => {\n    const t = useTranslation();\n    return <Button title={t(\"price-impact-too-high\")} disabled={true} />;\n};\nexport default PriceImpactTooHighButton;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ALCHEMY_PROVIDER, EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface SwapState extends TokenPairState {\n    trade?: Trade;\n    unsupported: boolean;\n    swapFee: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const [loading, setLoading] = useState(true);\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\n            if (state.fromToken && state.toToken && state.fromAmount && p) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, p));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [chainId, provider, state.fromToken, state.toToken, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n        }\n    }, [trade, state.fromAmount]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    state.setFromSymbol(\"\");\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        trade,\n        unsupported,\n        swapFee,\n        onSwap,\n        swapping\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport PriceImpactTooHighButton from \"../components/PriceImpactTooHighButton\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useSwapState, { SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MAX_PRICE_IMPACT = 7;\n\nconst SwapScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"new-order\")} />\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const { chainId } = useContext(EthersContext);\n    const state = useSwapState();\n    if (chainId !== 1 && chainId !== 42) return <ChangeNetwork />;\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { customTokens } = useContext(EthersContext);\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => !customTokens.find(tk => tk.address === token.address) && token.balance.isZero()}\n            />\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token => token.symbol === state.fromSymbol}\n            />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) return <WrapInfo state={state} />;\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            <SwapInfo state={state} disabled={disabled} />\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price-impact\")}\n                text={impact}\n                suffix={\"%\"}\n                danger={!!impact && Number(impact) > MAX_PRICE_IMPACT}\n                disabled={disabled}\n            />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            isEmptyValue(state.fromAmount) ||\n            (!state.loading && !state.trade) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : impact && Number(impact) > MAX_PRICE_IMPACT ? (\n                <PriceImpactTooHighButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={t(\"swap-\", {\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\n            })}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}
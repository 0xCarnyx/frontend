{"version":3,"sources":["src/components/AmountMeta.tsx","src/components/InsufficientBalanceButton.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/components/TokenName.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenSymbol.tsx","src/hooks/useSwapRouter.tsx","src/components/TokenAmount.tsx","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/components/UnsupportedButton.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["AmountMeta","props","t","useTranslation","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","disabled","amount","suffix","InsufficientBalanceButton","symbol","title","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","TokenName","caption","numberOfLines","ellipsizeMode","marginLeft","small","width","name","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenSymbol","medium","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","signer","Router","getAddress","feeOnTransfer","recipient","ttl","params","swapCallParameters","router","getContract","ROUTER","estimateGas","methodName","args","value","gasLimit","functions","mul","div","logTransaction","map","arg","addLiquidity","fromToken","toToken","fromAmount","toAmount","deadline","Math","floor","Date","getTime","deduct","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","TokenAmount","formatBalance","balance","decimals","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","UnsupportedButton","state","fromSymbol","toSymbol","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","tk","useEffect","undefined","trim","ethers","utils","isAddress","findOrFetchToken","Input","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","compareTokens","length","FlatList","keyExtractor","EmptyList","margin","Text","textAlign","selectable","CloseIcon","SelectIcon","t1","t2","isZero","value2","value1","localeCompare","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","includes","useSwapState","useTokenPairState","chainId","updateTokens","getTrade","useSDK","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","swapping","setSwapping","isEmptyValue","useDelayedOnBlockEffect","block","p","ALCHEMY_PROVIDER","parseBalance","onSwap","result","setFromSymbol","Swap","ChangeNetwork","large","Border","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","AmountInput","TokenInput","onAmountChanged","setFromAmount","NoPairNotice","TradeInfo","isETHWETHPair","InfoBox","WrapInfo","SwapInfo","outputAmount","toFixed","price","executionPrice","impact","priceImpact","Meta","label","SwapControls","error","setError","approveRequired","isETH","fromTokenAllowed","gt","isWETH","FetchingButton","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","SwapScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/6.dffb8f63.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const t = useTranslation();\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? t(\"n/a\") : props.amount ? props.amount + \" \" + (props.suffix || \"\") : t(\"fetching\")}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React from \"react\";\n\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    const t = useTranslation();\n    return <Button title={symbol ? t(\"insufficient-\", { symbol }) : t(\"insufficient-balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const t = useTranslation();\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={t(\"approve-\", { symbol: props.token?.symbol || \"\" })}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    const t = useTranslation();\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" \" + t(\"not-supported\")} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const t = useTranslation();\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(tk => tk.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={t(\"token-name-symbol-or-address\")}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const t = useTranslation();\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? t(\"already-added\") : t(\"-add-\") + \" \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenPrice from \"./TokenPrice\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\nimport TokenValue from \"./TokenValue\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () => tokens.filter(token => (props.hidden ? !props.hidden(token) : true)).sort(compareTokens),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    const t = useTranslation();\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {t(\"you-dont-have-assets\")}\n            </Text>\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem = (props: {\n    token: TokenWithValue;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <View>\n                    {props.token.priceUSD !== null && (\n                        <TokenPrice\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ marginLeft: Spacing.small }}\n                        />\n                    )}\n                    <TokenName token={props.token} disabled={props.disabled} />\n                </View>\n                <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                    {props.token.valueUSD !== null && <TokenValue token={props.token} disabled={props.disabled} />}\n                    <FlexView>\n                        <TokenAmount\n                            token={props.token}\n                            disabled={props.disabled}\n                            style={{ flex: 1, textAlign: \"right\" }}\n                        />\n                        {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                    </FlexView>\n                </View>\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst compareTokens = (t1: TokenWithValue, t2: TokenWithValue) => {\n    if (t2.balance.isZero() && t1.balance.isZero()) return (t2?.priceUSD || 0) - (t1?.priceUSD || 0);\n    const value2 = t2?.valueUSD || 0;\n    const value1 = t1?.valueUSD || 1;\n    if (value2 === value1) {\n        return (\n            (t2.balance.isZero() ? 0 : 10000000000) -\n            (t1.balance.isZero() ? 0 : 10000000000) +\n            t1.symbol.localeCompare(t2.symbol)\n        );\n    }\n    return value2 - value1;\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ALCHEMY_PROVIDER, EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useSwapRouter from \"./useSwapRouter\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface SwapState extends TokenPairState {\n    trade?: Trade;\n    unsupported: boolean;\n    swapFee: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, updateTokens } = useContext(EthersContext);\n    const { getTrade } = useSDK();\n    const { swap, calculateSwapFee } = useSwapRouter();\n    const [loading, setLoading] = useState(true);\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\n            if (state.fromToken && state.toToken && state.fromAmount && p) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, p));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [chainId, provider, state.fromToken, state.toToken, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n        }\n    }, [trade, state.fromAmount]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    state.setFromSymbol(\"\");\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        trade,\n        unsupported,\n        swapFee,\n        onSwap,\n        swapping\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport ChangeNetwork from \"../components/ChangeNetwork\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useSwapState, { SwapState } from \"../hooks/useSwapState\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, isETH, isETHWETHPair, isWETH, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"new-order\")} />\n                    <Text light={true}>{t(\"new-order-desc\")}</Text>\n                    <Swap />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <SwapSubMenu />\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const { chainId } = useContext(EthersContext);\n    const state = useSwapState();\n    if (chainId !== 1 && chainId !== 42) return <ChangeNetwork />;\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {!state.loading && !state.trade && <NoPairNotice state={state} />}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    const { customTokens } = useContext(EthersContext);\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-sell\")}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => !customTokens.find(tk => tk.address === token.address) && token.balance.isZero()}\n            />\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol) {\n        return <Heading text={t(\"token-to-buy\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={t(\"token-to-buy\")}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token => token.symbol === state.fromSymbol}\n            />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={t(\"amount\")} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" \" + t(\"amount\")} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst NoPairNotice = ({ state }: { state: SwapState }) => {\n    const t = useTranslation();\n    return (\n        <Notice\n            text={t(\"pair-not-created\", { fromSymbol: state.fromSymbol, toSymbol: state.toSymbol })}\n            color={\"red\"}\n            style={{ marginTop: Spacing.normal }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (isETHWETHPair(state.fromToken, state.toToken)) return <WrapInfo state={state} />;\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (!state.loading && !state.trade);\n    return (\n        <InfoBox>\n            <SwapInfo state={state} disabled={disabled} />\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const t = useTranslation();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <AmountMeta amount={amount} suffix={state.toSymbol} disabled={disabled} />\n            <Meta\n                label={t(\"price\")}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={t(\"price-impact\")} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={t(\"fee-amount\")} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !isETH(state.fromToken) && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            isEmptyValue(state.fromAmount) ||\n            (!state.loading && !state.trade) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : isWETH(state.fromToken) && isETH(state.toToken) ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : isETH(state.fromToken) && isWETH(state.toToken) ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const t = useTranslation();\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={t(\"swap-\", {\n                symbol: state.fromSymbol && state.toSymbol ? \" \" + state.fromSymbol + \"-\" + state.toSymbol : \"\"\n            })}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={t(\"wrap\")} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const t = useTranslation();\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={t(\"unwrap\")} loading={state.unwrapping} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}
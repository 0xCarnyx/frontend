{"version":3,"sources":["src/utils/analytics-utils.ts","assets/flags/us.png","assets/flags/cn.png","assets/flags/kr.png","assets/flags/fr.png","assets/flags/es.png","assets/flags/jp.png","assets/images/alchemy.png","assets/images/metamask-dark.png","assets/images/metamask.png","assets/images/icon.png","assets/fonts/IBMPlexSansKR-Light.ttf","assets/fonts/IBMPlexSansKR-Regular.ttf","assets/fonts/IBMPlexSansKR-SemiBold.ttf","src/constants/tokens.ts","src/hooks/useLinker.tsx","src/constants/Fraction.ts","src/constants/dimension.ts","src/utils/getContract.ts","src/utils/index.ts","src/components/Button.tsx","src/utils/fetch-utils.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/hooks/useStyles.tsx","src/components/BackgroundImage.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Title.tsx","src/components/web/WebSubMenu.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/hooks/useSwapRouter.tsx","src/hooks/useSettlement.tsx","src/context/GlobalContext.tsx","src/context/EthersContext.tsx","src/hooks/useTranslation.tsx","src/constants/contracts.ts","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/components/Text.tsx","src/components/FlexView.tsx","assets/images/icon-circle.png"],"names":["logTransaction","tx","name","a","async","args","Analytics","hash","value","toString","gasLimit","gasPrice","chainId","module","exports","ETH","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","Fraction","numerator","denominator","this","sdk","numeratorToken","denominatorToken","mul","pow","NAN","isEmptyValue","ZERO","parseBalance","BASE","isNaN","isZero","fraction","div","eq","gt","lt","maxFractions","str","formatBalance","endsWith","substring","length","Zero","One","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","ZapIn","ZapOut","getContract","signerOrProvider","contract","Contract","formatUSD","maxFraction","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","substr","utils","formatUnits","parseUnits","text","isBigNumber","replace","isETH","token","toLowerCase","isWETH","WETH","isETHWETHPair","fromToken","toToken","convertToken","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","parseCurrencyAmount","toExact","deduct","percent","sub","pow10","exp","Button","props","useColors","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","fetchTokens","account","customTokens","fetch","response","json","tokens","fetchTokenBalances","map","balances","ALCHEMY_PROVIDER","getBalance","i","fetchTokenWithValue","weth","wethPriceUSD","getPair","provider","fetched","priceUSD","Number","valueUSD","apply","pair","priceETH","convert","priceOf","fetchPools","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","poolId","reduce","sushiPerBlock","floor","allocPoint","totalAllocPoint","fetchPool","slpBalance","Promise","all","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","totalValueETH","totalSupply","tokenA","tokenB","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","filter","fetchMyPools","fetchMyPool","fetchMyStake","id","myStake","amountDeposited","pendingSushi","lpToken","stakedValue","masterChef","MASTER_CHEF","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","page","findPairs","min","toNumber","pairs","flat","index","erc20","find","t","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","fetchLPTokenWithValue","fetchTotalValue","values","add","lpPair","tokenWithValue","tokenReserve","reserveOf","tokenPrice","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","signer","canceledHashes","orderBook","ORDER_BOOK","KOVAN_PROVIDER","SETTLEMENT","settlement","getAddress","maker","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","Order","amountIn","amountOutMin","recipient","deadline","v","r","s","filledAmountInOfHash","includes","myOrders","sort","compareOrders","o0","o1","status","compared","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","header","submenu","background","border","borderDark","textDark","textLight","shadow","overlay","dark","inverted","darkMode","useContext","GlobalContext","useStyles","shadowColor","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","BackgroundImage","position","aspectRatio","marginTop","marginLeft","alignSelf","Container","select","web","contentContainerStyle","flex","default","Content","marginRight","marginBottom","Title","HomeSubMenu","useTranslation","WebSubMenu","items","title","SwapSubMenu","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","FarmingSubMenu","top","justifyContent","alignItems","item","MenuItem","key","match","useRouteMatch","active","isExact","to","paddingTop","paddingBottom","textDecoration","AppHeader","View","StatusBar","translucent","ConnectButton","setEthereum","EthersContext","metaMask","ethereum","isMetaMask","request","method","alert","containerStyle","marginHorizontal","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","Image","WebFooter","simple","WebScreen","right","bottom","left","ConnectToWallet","AppScreen","useQuery","location","useLocation","URLSearchParams","search","Screen","setLocale","query","useEffect","locale","WBTC","Token","DAI","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","bases","basePairs","flatMap","base","otherBase","t0","t1","allPairCombinations","Boolean","b","customBases","customBasesA","customBasesB","equals","Fetcher","fetchPairData","useSDK","getTotalSupply","getTrade","fromAmount","eth","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","minted","getLiquidityMinted","raw","SocialIcon","iconColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","raised","reverse","reverseColor","FLAGS","us","cn","kr","fr","es","jp","Flag","TouchableHighlight","pathname","onPressAlchemy","Text","note","Constants","manifest","version","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","functions","arg","addLiquidity","Date","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","now","filledAmountIn","canceled","defaultAbiCoder","ORDER_TYPEHASH","encode","keccak256","domain","verifyingContract","types","payload","_TypedDataEncoder","getPayload","signData","sign","useSettlement","createOrder","order","toArgs","cancelOrder","queryOrderCanceledEvents","filters","OrderCanceled","queryFilter","queryOrderFilledEvents","OrderFilled","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","parse","React","createContext","load","clear","_locale","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","children","colorScheme","useColorScheme","useState","Localization","Provider","AsyncStorage","getItem","mode","mne","removeItem","l","setItem","GlobalContextConsumer","Consumer","providers","AlchemyProvider","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","setProvider","setSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","translate","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","onChainChanged","onDisconnect","on","off","lookupAddress","ens","list","p","JSON","findIndex","custom","stringify","spender","MaxUint256","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","EthersContextConsumer","i18n","translations","en","zh","ko","defaultLocale","fallbacks","SUSHI_BAR","SUSHI_ROLL","ZAP_IN","ZAP_OUT","ContextProvider","SvgMoon","viewBox","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","fill","d","SvgSun","cx","cy","transform","DarkModeSwitch","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","icon","Menu","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","WebScreens","menuExpanded","setMenuExpanded","fallback","exact","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","regular","bold","AppLoading","global","Buffer","medium","h1Style","h2Style","h3Style","h4Style","caption","flexDirection","direction"],"mappings":"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","file":"static/js/app.78112c67.chunk.js","sourcesContent":["import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","module.exports = __webpack_public_path__ + \"static/media/us.d367121f.png\";","module.exports = __webpack_public_path__ + \"static/media/cn.baedda5d.png\";","module.exports = __webpack_public_path__ + \"static/media/kr.146730ea.png\";","module.exports = __webpack_public_path__ + \"static/media/fr.dda60be7.png\";","module.exports = __webpack_public_path__ + \"static/media/es.82844a36.png\";","module.exports = __webpack_public_path__ + \"static/media/jp.27444bf9.png\";","module.exports = __webpack_public_path__ + \"static/media/alchemy.5bf96491.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.70db5536.png\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-Light.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/IBMPlexSansKR-SemiBold.ttf\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushi.com/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 720;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport ZapIn from \"@sushiswap/zapper/artifacts/Sushiswap_ZapIn_General_V2.json\";\nimport ZapOut from \"@sushiswap/zapper/artifacts/Sushiswap_ZapOut_General_V1.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner },\n    ZapIn,\n    ZapOut\n};\n\nconst getContract = (name: string, address: string, signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport default getContract;\n","import { ChainId, CurrencyAmount, Percent, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport getContract from \"./getContract\";\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const isETH = (token?: Token) => token?.address.toLowerCase() === ETH.address.toLowerCase();\n\nexport const isWETH = (token?: Token) => token?.address.toLowerCase() === WETH[1].address.toLowerCase();\n\nexport const isETHWETHPair = (fromToken?: Token, toToken?: Token) => {\n    return (isETH(fromToken) && isWETH(toToken)) || (isWETH(fromToken) && isETH(toToken));\n};\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const deduct = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n\nexport { getContract };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY, Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER, KOVAN_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSettlement\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport {\n    convertToken,\n    formatBalance,\n    getContract,\n    isETH,\n    isWETH,\n    parseBalance,\n    parseCurrencyAmount,\n    pow10\n} from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://levxdao.org/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ];\n};\n\nexport const fetchTokenWithValue = async (\n    token: Token,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    return fetched;\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nexport const fetchLPTokenWithValue = async (\n    lpToken: LPToken,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, KOVAN_PROVIDER);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ed1c27\",\n        submenu: \"#024fa2\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#ffffff\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#ffffff\",\n        textDark: \"#ffffff\",\n        textMedium: \"#d5d1cc\",\n        textLight: \"#cccccc\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = (inverted?: boolean) => {\n    let { darkMode } = useContext(GlobalContext);\n    if (inverted) {\n        darkMode = !darkMode;\n    }\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { background } = useColors();\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {/*{darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackgroundLight {...props} />}*/}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderColor : undefined }),\n                    ...shadow(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            disabled={props.disabled}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React, { FC, useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\nexport const HomeSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"total-value\"),\n                    path: \"/\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const SwapSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"new-order\"),\n                    path: \"/swap\"\n                },\n                {\n                    title: t(\"my-orders\"),\n                    path: \"/swap/my-orders\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const LiquiditySubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"add-liquidity\"),\n                    path: \"/liquidity\"\n                },\n                {\n                    title: t(\"remove-liquidity\"),\n                    path: \"/liquidity/remove\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const MigrateSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"migrate-liquidity\"),\n                    path: \"/migrate\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const StakingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"stake\"),\n                    path: \"/staking\"\n                },\n                {\n                    title: t(\"unstake\"),\n                    path: \"/staking/unstake\"\n                }\n            ]}\n        />\n    );\n};\n\nexport const FarmingSubMenu = () => {\n    const t = useTranslation();\n    return (\n        <WebSubMenu\n            items={[\n                {\n                    title: t(\"plant-lp-tokens\"),\n                    path: \"/farming\"\n                },\n                {\n                    title: t(\"harvest-sushi\"),\n                    path: \"/farming/harvest\"\n                }\n            ]}\n        />\n    );\n};\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { accent, textLight } = useColors(!darkMode);\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport Button from \"../Button\";\nimport WebFooter from \"./WebFooter\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/images/metamask-dark.png\")\n            : require(\"../../../assets/images/metamask.png\")\n        : require(\"../../../assets/images/icon.png\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n            <WebFooter simple={true} />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const t = useTranslation();\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(t(\"no-ethereum-provider-found\"));\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : t(\"connect\")}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext, useEffect } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { useLocation } from \"react-router-dom\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst Screen = props => {\n    const { setLocale } = useContext(GlobalContext);\n    const query = useQuery();\n    useEffect(() => {\n        const locale = query.get(\"locale\");\n        if (locale) {\n            setLocale(locale);\n        }\n    }, [query]);\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nconst useQuery = () => {\n    const location = useLocation();\n    return new URLSearchParams(location.search);\n};\n\nexport default Screen;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst WBTC = new Token(ChainId.MAINNET, \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\", 8, \"WBTC\", \"Wrapped BTC\");\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], WBTC, DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET], WBTC]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/LevXDAOhGeez\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/levxdao\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/oh-geez\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport useLinker from \"../../hooks/useLinker\";\nimport FlexView from \"../FlexView\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst FLAGS = {\n    us: require(\"../../../assets/flags/us.png\"),\n    cn: require(\"../../../assets/flags/cn.png\"),\n    kr: require(\"../../../assets/flags/kr.png\"),\n    fr: require(\"../../../assets/flags/fr.png\"),\n    es: require(\"../../../assets/flags/es.png\"),\n    jp: require(\"../../../assets/flags/jp.png\")\n};\n\nconst ALCHEMY_URL = \"https://dashboard.alchemyapi.io/signup?referral=429fb682-0d85-40ab-ad88-daf847cf7c63\";\n\nconst WebFooter = ({ simple = false }) => {\n    const onPressAlchemy = useLinker(ALCHEMY_URL, \"\", \"_blank\");\n    return (\n        <View style={{ width: \"100%\", padding: Spacing.normal, alignItems: \"center\" }}>\n            {!simple && (\n                <>\n                    <SocialIcons />\n                    <TouchableHighlight onPress={onPressAlchemy}>\n                        <Image\n                            source={require(\"../../../assets/images/alchemy.png\")}\n                            style={{ width: 188, height: 40, marginTop: Spacing.tiny }}\n                        />\n                    </TouchableHighlight>\n                </>\n            )}\n            <Text note={true} style={{ marginTop: Spacing.tiny }}>\n                Built with ❤️ by SushiSwap (v{Constants.manifest.version})\n            </Text>\n            <FlexView style={{ marginTop: Spacing.small }}>\n                <Flag name={\"us\"} locale={\"en\"} />\n                <Flag name={\"es\"} locale={\"es\"} />\n                <Flag name={\"fr\"} locale={\"fr\"} />\n                <Flag name={\"cn\"} locale={\"zh\"} />\n                <Flag name={\"jp\"} locale={\"jp\"} />\n                <Flag name={\"kr\"} locale={\"ko\"} />\n            </FlexView>\n        </View>\n    );\n};\n\nconst Flag = ({ name, locale }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const onPress = () => {\n        history.push(location.pathname + \"?locale=\" + locale);\n    };\n    return (\n        <TouchableHighlight onPress={onPress} style={{ marginHorizontal: 4 }}>\n            <Image source={FLAGS[name]} style={{ width: 30, height: 20 }} />\n        </TouchableHighlight>\n    );\n};\n\nexport default WebFooter;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import { useCallback } from \"react\";\n\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { signData } from \"eth-permit/dist/rpc\";\nimport { ethers } from \"ethers\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport Token from \"../types/Token\";\nimport { getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSettlement = () => {\n    const { calculateSwapFee } = useSwapRouter();\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, signer);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = await order.toArgs();\n\n        const gasLimit = await settlement.estimateGas.cancelOrder(args);\n        const tx = await settlement.cancelOrder(args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderCanceledEvents = useCallback(async (signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderCanceled(null);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        const fraction = Fraction.parse(price);\n        return swapFeeDeducted\n            .mul(pow10(toToken.decimals))\n            .mul(fraction.numerator)\n            .div(fraction.denominator)\n            .div(pow10(fromToken.decimals));\n    };\n\n    return {\n        createOrder,\n        cancelOrder,\n        queryOrderCanceledEvents,\n        queryOrderFilledEvents,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    };\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    static ORDER_TYPEHASH = \"0x7c228c78bd055996a44b5046fb56fa7c28c66bce92d9dc584f742b2cd76a140f\";\n\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        return ethers.utils.keccak256(\n            ethers.utils.defaultAbiCoder.encode(\n                [\"bytes32\", \"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"address\", \"uint256\"],\n                [\n                    Order.ORDER_TYPEHASH,\n                    await this.maker.getAddress(),\n                    this.fromToken.address,\n                    this.toToken.address,\n                    this.amountIn,\n                    this.amountOutMin,\n                    this.recipient,\n                    this.deadline\n                ]\n            )\n        );\n    }\n\n    async sign() {\n        const address = await this.maker.getAddress();\n        const domain = {\n            name: \"OrderBook\",\n            version: \"1\",\n            chainId: 42,\n            verifyingContract: ORDER_BOOK\n        };\n        const types = {\n            Order: [\n                { name: \"maker\", type: \"address\" },\n                { name: \"fromToken\", type: \"address\" },\n                { name: \"toToken\", type: \"address\" },\n                { name: \"amountIn\", type: \"uint256\" },\n                { name: \"amountOutMin\", type: \"uint256\" },\n                { name: \"recipient\", type: \"address\" },\n                { name: \"deadline\", type: \"uint256\" }\n            ]\n        };\n        const value = {\n            maker: address,\n            fromToken: this.fromToken.address,\n            toToken: this.toToken.address,\n            amountIn: this.amountIn,\n            amountOutMin: this.amountOutMin,\n            recipient: this.recipient,\n            deadline: this.deadline\n        };\n        const payload = _TypedDataEncoder.getPayload(domain, types, value);\n        return await signData(window.ethereum, address, payload);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSettlement;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport * as Localization from \"expo-localization\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    locale: \"\",\n    setLocale: async (_locale: string) => {},\n    darkMode: false,\n    setDarkMode: async (_darkMode: boolean) => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [locale, setLocale] = useState(Localization.locale);\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    setLocale((await AsyncStorage.getItem(\"locale\")) || Localization.locale);\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                locale,\n                setLocale: async (l: string) => {\n                    await AsyncStorage.setItem(\"locale\", l);\n                    setLocale(l);\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport useSDK from \"../hooks/useSDK\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { getContract, isWETH } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens, fetchTokenWithValue } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(1, process.env.MAINNET_API_KEY);\nexport const KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(42, process.env.KOVAN_API_KEY);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    status: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as TokenWithValue[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const { getPair } = useSDK();\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<TokenWithValue[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n    const translate = useTranslation();\n    const status = !!address\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : translate(\"menu.not-connected\");\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum, chainId]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await ALCHEMY_PROVIDER.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && chainId && customTokens) {\n            try {\n                const list = await fetchTokens(address, customTokens);\n                const weth = list.find(t => isWETH(t));\n                const p = chainId === 1 ? provider : ALCHEMY_PROVIDER;\n                if (list?.length > 0 && weth && p) {\n                    const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                    setTokens(\n                        await Promise.all(\n                            list.map(async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, p))\n                        )\n                    );\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && chainId && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, chainId, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                chainId,\n                address,\n                ensName,\n                status,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import { useContext } from \"react\";\n\nimport i18n from \"i18n-js\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useTranslation = () => {\n    const { locale } = useContext(GlobalContext);\n    i18n.translations = {\n        en: require(\"../constants/strings/en.json\"),\n        zh: require(\"../constants/strings/zh.json\"),\n        ko: require(\"../constants/strings/ko.json\"),\n        fr: require(\"../constants/strings/fr.json\"),\n        es: require(\"../constants/strings/es.json\"),\n        jp: require(\"../constants/strings/jp.json\")\n    };\n    i18n.locale = locale;\n    i18n.defaultLocale = \"en-US\";\n    i18n.fallbacks = true;\n    return i18n.t;\n};\n\nexport default useTranslation;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ZAP_IN = \"0xfF350eDc2242Ca4d7252A64746aec4A5487a852B\";\nexport const ZAP_OUT = \"0xf12CAB7Acaa14Eed3bEa82199ea2f5c2C2194B81\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#ffffff\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#ffffff\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={[{ marginTop: Spacing.tiny / 2 }, props.style]}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\n// tslint:disable-next-line:max-func-body-length\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const t = useTranslation();\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={t(\"menu.home\")} path={\"/\"} />\n                        <MobileWebMenuItem title={t(\"menu.swap\")} path={\"/swap\"} />\n                        <MobileWebMenuItem title={t(\"menu.liquidity\")} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n                        {/*<MobileWebMenuItem title={t(\"menu.stake\")} path={\"/staking\"} />*/}\n                        {/*<MobileWebMenuItem title={t(\"menu.farm\")} path={\"/farming\"} />*/}\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, status } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{status}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{ fontFamily: \"regular\", fontSize: 15, color: accent, alignSelf: \"flex-end\" }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { Image, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport useTranslation from \"../../hooks/useTranslation\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const icon = require(\"../../../assets/images/icon-circle.png\");\n    return (\n        <View style={{ alignSelf: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Image source={icon} style={{ width: 40, height: 40, marginTop: 4, marginLeft: -16 }} />\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    const t = useTranslation();\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={t(\"menu.home\")} path={\"/\"} />\n            <MenuItem title={t(\"menu.swap\")} path={\"/swap\"} />\n            <MenuItem title={t(\"menu.liquidity\")} path={\"/liquidity\"} />\n            <MenuItem title={t(\"menu.migrate\")} path={\"/migrate\"} />\n            {/*<MenuItem title={t(\"menu.stake\")} path={\"/staking\"} />*/}\n            {/*<MenuItem title={t(\"menu.farm\")} path={\"/farming\"} />*/}\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, textLight } = useColors(!darkMode);\n    const match = useRouteMatch(path);\n    const active = (path === \"/\" ? match?.isExact : true) && match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, marginBottom: -4, textDecoration: \"none\" }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? textDark : textLight,\n                    padding: 3\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const t = useTranslation();\n    const { darkMode } = useContext(GlobalContext);\n    const { textLight, green, borderDark } = useColors(!darkMode);\n    const { ethereum, chainId, status } = useContext(EthersContext);\n    const color = chainId === 1 ? green : chainId === 42 ? \"#8A2BE2\" : textLight;\n    const onPress = () => {\n        if (confirm(t(\"do-you-want-to-disconnect\"))) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginTop: Spacing.tiny / 2,\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{status}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const t = useTranslation();\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={t(\"loading\")} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Suspense fallback={<EmptyScreen />}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        <Route path={\"/farming/harvest\"}>\n                            <HarvestScreen />\n                        </Route>\n                        <Route path={\"/farming\"}>\n                            <FarmingScreen />\n                        </Route>\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Route path={\"/\"} exact={true}>\n                            <HomeScreen />\n                        </Route>\n                        <Redirect to={\"/\"} />\n                    </Switch>\n                </Suspense>\n                <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: require(\"./assets/fonts/IBMPlexSansKR-Light.ttf\"),\n        regular: require(\"./assets/fonts/IBMPlexSansKR-Regular.ttf\"),\n        bold: require(\"./assets/fonts/IBMPlexSansKR-SemiBold.ttf\")\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","module.exports = __webpack_public_path__ + \"static/media/icon-circle.78e243bf.png\";"],"sourceRoot":""}